{"version":3,"sources":["actions/index.js","reducers/todos.js","reducers/visibilityFilter.js","constants.js","reducers/index.js","components/TodosInput.js","components/Todo.js","components/TodosFooter.js","App.js","containers/ContainerApp.js","index.js"],"names":["setVisibilityFilter","visibilityFilter","type","todo","state","action","id","text","completed","Object","assign","todos","arguments","length","undefined","concat","toConsumableArray","map","t","filter","isAllToggle","every","objectSpread","todoApp","combineReducers","TodosInput","_this$props","this","props","classes","onKeyPress","quantity","active","onToggleAllTodos","isHidden","hidden","react_default","a","createElement","className","container","Checkbox_default","checkedIcon","ExpandMoreOutlined_default","checked","onChange","icon","ExpandMore_default","InputBase_default","placeholder","e","input","Component","withStyles","padding","border","background","width","display","visibility","Todo","deleteTodoById","onToggle","isActive","label","FormControlLabel_default","checkCircle","control","RadioButtonUnchecked_default","CheckCircle_default","IconButton_default","onClick","Clear_default","justifyContent","borderTop","marginLeft","textDecoration","filtersArray","value","TodosFooter","deleteCompletedTodos","activeQuantity","changeFilterState","isCompleted","someCompletedTodo","filtersButton","_ref","index","Button_default","key","button","activeFilter","wrapper","height","alignItems","margin","App","React","createContext","objectWithoutProperties","title","components_TodosInput","everyCompletedTodo","components_Todo","onToggleTodo","deleteTodo","components_TodosFooter","onChangeFilter","onClearSelectedTodos","fontSize","fontWeight","textAlign","color","position","boxShadow","flexDirection","onFilterTodos","selectedFilter","ContainerApp","connect","some","dispatch","ownProps","target","_","uniqueId","toggleTodo","store","createStore","render","es","containers_ContainerApp","document","getElementById"],"mappings":"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","file":"static/js/main.e7c05c4e.chunk.js","sourcesContent":["import _ from 'lodash'\r\n\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS'\r\nexport const CLEAR_SELECTED_TODOS = 'CLEAR_SELECTED_TODOS'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\n\r\nexport const addTodo = (text) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        id: _.uniqueId(),\r\n        text\r\n    }\r\n}\r\n\r\nexport const setVisibilityFilter = (visibilityFilter) => {\r\n    return {\r\n        type: SET_VISIBILITY_FILTER,\r\n        visibilityFilter\r\n    }\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n    return {\r\n        type: TOGGLE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport const toggleAllTodos = () => {\r\n    return {\r\n        type: TOGGLE_ALL_TODOS\r\n    }\r\n}\r\n\r\nexport const deleteTodoById = (id) => {\r\n    return {\r\n        type: DELETE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport const clearSelectedTodos = () => {\r\n    return {\r\n        type: CLEAR_SELECTED_TODOS\r\n    }\r\n}","import {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    TOGGLE_TODO,\r\n    TOGGLE_ALL_TODOS,\r\n    CLEAR_SELECTED_TODOS\r\n} from '../actions/index'\r\n\r\nconst todo = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                id: action.id,\r\n                text: action.text,\r\n                completed: false\r\n            }\r\n        case TOGGLE_TODO:\r\n            if (state.id !== action.id) {\r\n                return state\r\n            }\r\n\r\n            return Object.assign({}, state, {\r\n                completed: !state.completed\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst todos = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [\r\n                ...state,\r\n                todo(undefined, action)\r\n            ]\r\n        case TOGGLE_TODO:\r\n            return state.map(t =>\r\n                todo(t, action)\r\n            )\r\n\r\n        case DELETE_TODO:\r\n            return state.filter(todo => todo.id !== action.id)\r\n\r\n        case CLEAR_SELECTED_TODOS:\r\n            return state.filter(todo => !todo.completed)\r\n\r\n        case TOGGLE_ALL_TODOS:\r\n            const isAllToggle = state.every(todo => todo.completed);\r\n            return state.map(todo => { return { ...todo, completed: !isAllToggle}})\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todos","import { SET_VISIBILITY_FILTER } from '../actions/index'\r\nimport { SHOW_ALL } from '../constants'\r\n\r\nconst visibilityFilter = (state = SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n      case SET_VISIBILITY_FILTER:\r\n        return action.visibilityFilter\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\nexport default visibilityFilter","export const SHOW_ALL = \"SHOW_ALL\";\r\nexport const SHOW_ACTIVE = \"SHOW_ACTIVE\";\r\nexport const SHOW_COMPLETED = \"SHOW_COMPLETED\";","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nconst todoApp = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n\r\nexport default todoApp","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputBase  from '@material-ui/core/InputBase';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ExpandMoreOutlined from '@material-ui/icons/ExpandMoreOutlined';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst styles = () => ({\r\n input: {\r\n    padding: '16px 16px 16px 0',\r\n    border: 'none',\r\n    background: 'rgba(0, 0, 0, 0.003)',\r\n    width: '100%'\r\n },\r\n container: {\r\n     display: 'flex'\r\n },\r\n hidden: {\r\n   visibility: 'hidden'\r\n }\r\n});\r\n\r\nclass TodosInput extends Component {\r\n  render() {\r\n    const {classes, onKeyPress, quantity, active, onToggleAllTodos} = this.props;\r\n    const isHidden = quantity ? null: classes.hidden;\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <Checkbox\r\n            className={isHidden}\r\n            checkedIcon={<ExpandMoreOutlined />}\r\n            checked={active}\r\n            onChange={onToggleAllTodos}\r\n            icon={<ExpandMore />}\r\n        />\r\n        <InputBase \r\n            placeholder=\"What needs to be done?\"\r\n            onKeyPress={(e) => onKeyPress(e)}\r\n            className={classes.input}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TodosInput);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        borderTop: '1px solid #ededed'   \r\n    },\r\n    checkCircle: {\r\n        marginLeft: '0px'\r\n    },\r\n    label: {\r\n        textDecoration: 'line-through'\r\n    }\r\n});\r\n\r\nclass Todo extends Component {\r\n    render() {\r\n        const { classes, todo, deleteTodoById, onToggle} = this.props;\r\n        const isActive = todo.completed ? classes.label : null;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <FormControlLabel\r\n                    className={classes.checkCircle}\r\n                    control={<Checkbox\r\n                        checked={todo.completed}\r\n                        onChange={() => onToggle(todo.id)}\r\n                        icon={<RadioButtonUnchecked />}\r\n                        checkedIcon={<CheckCircle />}\r\n                    />}\r\n                    label={todo.text}\r\n                    classes={{label: isActive}}\r\n                />\r\n                <IconButton onClick={() => deleteTodoById(todo.id)}>\r\n                    <Clear />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Todo);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SHOW_ALL, SHOW_ACTIVE, SHOW_COMPLETED } from '../constants';\r\n\r\nconst filtersArray = [\r\n    { label: 'All', value: SHOW_ALL },\r\n    { label: 'Active', value: SHOW_ACTIVE },\r\n    { label: 'Completed', value: SHOW_COMPLETED }]\r\n\r\nconst styles = () => ({\r\n    wrapper: {\r\n        height: '50px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '10px 15px',\r\n        borderTop: '1px solid #e6e6e6'\r\n    },\r\n    button: {\r\n        margin: '0 8px'\r\n    },\r\n    hidden: {\r\n        visibility: 'hidden'\r\n    },\r\n    activeFilter: {\r\n        border: '1px solid rgba(175, 47, 47, 0.2)'\r\n    }\r\n});\r\n\r\nclass TodosFooter extends Component {\r\n    render() {\r\n        const { classes, deleteCompletedTodos, visibilityFilter, activeQuantity, changeFilterState, someCompletedTodo } = this.props;\r\n        const isCompleted = someCompletedTodo ? null : classes.hidden ;\r\n\r\n        const filtersButton = filtersArray.map(({value, label}, index) =>\r\n            <Button\r\n                key={`key-${index}`}\r\n                onClick={() => changeFilterState(value)}\r\n                className={`${classes.button} ${visibilityFilter === value ? classes.activeFilter : null}`}\r\n            >\r\n                {label}\r\n            </Button>)\r\n\r\n        return (\r\n            <div className={classes.wrapper}>\r\n                <div>{activeQuantity} items left</div>\r\n                <div>{filtersButton}</div>\r\n\r\n\r\n                <Button \r\n                    onClick={deleteCompletedTodos} \r\n                    className={isCompleted}>Clear completed</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TodosFooter);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TodosInput from './components/TodosInput';\nimport Todo from './components/Todo';\nimport TodosFooter from './components/TodosFooter';\n\nconst styles = () => ({\n  title: {\n    fontSize: '100px',\n    fontWeight: '100',\n    textAlign: 'center',\n    color: 'rgba(175, 47, 47, 0.15)'\n  },\n  container: {\n    background: '#fff',\n    margin: '40px 20%',\n    position: 'relative',\n    boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1)'\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n});\n\nexport const ThemeContext = React.createContext('light');\n\n\nclass App extends Component {\n  render() {\n    const { \n      classes, ...container } = this.props;\n\n    return (\n      <div>\n        <div className={classes.title}>TO DO</div>\n\n        <section className={classes.container}>\n          <TodosInput\n            onKeyPress={container.onKeyPress}\n            quantity={container.quantity}\n            active={container.everyCompletedTodo}\n            onToggleAllTodos={container.onToggleAllTodos}\n          />\n\n          <div className={classes.wrapper}>\n            {container.todos.map(todo => \n              <Todo\n                onToggle={container.onToggleTodo} \n                key={todo.id}\n                todo={todo} \n                deleteTodoById={container.deleteTodo}\n              />\n            )}\n          </div>\n\n          {(container.quantity > 0) &&\n            <TodosFooter\n              visibilityFilter={container.active}\n              someCompletedTodo={container.someCompletedTodo}\n              changeFilterState={container.onChangeFilter}\n              deleteCompletedTodos={container.onClearSelectedTodos}\n              activeQuantity={container.activeQuantity}\n            />}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);","import { connect } from 'react-redux'\r\nimport { \r\n    setVisibilityFilter,\r\n    addTodo,\r\n    deleteTodoById,\r\n    toggleTodo,\r\n    clearSelectedTodos,\r\n    toggleAllTodos\r\n } from '../actions/index'\r\nimport {SHOW_ALL, SHOW_ACTIVE, SHOW_COMPLETED} from '../constants';\r\nimport App from '../App'\r\n\r\nconst onFilterTodos = (todos, selectedFilter) => {\r\n    switch (selectedFilter) {\r\n      case SHOW_ALL: \r\n        return todos;\r\n      case SHOW_ACTIVE: \r\n        return todos.filter(todo => !todo.completed);\r\n      case SHOW_COMPLETED: \r\n        return todos.filter(todo => todo.completed);\r\n      default:\r\n       return todos;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    active: state.visibilityFilter,\r\n    todos: onFilterTodos(state.todos, state.visibilityFilter),\r\n    quantity: state.todos.length,\r\n    someCompletedTodo: state.todos.some(todo => todo.completed),\r\n    everyCompletedTodo: state.todos.every(todo => todo.completed),\r\n    activeQuantity: state.todos.filter(todo => !todo.completed).length\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {  \r\n  return {\r\n    onClick: () => {\r\n      dispatch(setVisibilityFilter(ownProps.filter))\r\n    },\r\n\r\n    onKeyPress: ({key, target}) => {\r\n        if(key === 'Enter' && target.value) {\r\n            dispatch(addTodo(target.value));\r\n            target.value = '';\r\n        }\r\n    },\r\n\r\n    deleteTodo: (id) => {\r\n        dispatch(deleteTodoById(id))\r\n    },\r\n\r\n    onToggleTodo: (id) => {\r\n        dispatch(toggleTodo(id))\r\n    },\r\n\r\n    onClearSelectedTodos: () => {\r\n        dispatch(clearSelectedTodos())\r\n    },\r\n\r\n    onToggleAllTodos: () => {\r\n        dispatch(toggleAllTodos())\r\n    },\r\n\r\n    onChangeFilter: (visibilityFilter) => {\r\n        dispatch(setVisibilityFilter(visibilityFilter))\r\n    }\r\n  }\r\n}\r\n\r\nconst ContainerApp = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)\r\n\r\nexport default ContainerApp","import React from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport todoApp from './reducers/index'\nimport ContainerApp from './containers/ContainerApp';\n\nlet store = createStore(todoApp)\n\nrender(\n  <Provider store={store}>\n    <ContainerApp />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}